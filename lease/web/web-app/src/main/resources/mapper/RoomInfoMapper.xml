<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.lease.web.app.mapper.RoomInfoMapper">
    <resultMap id="RoomItemMap" type="com.atguigu.lease.web.app.vo.room.RoomItemVo" autoMapping="true">
        <id property="id" column="id"/>

        <association property="apartmentInfo" javaType="com.atguigu.lease.model.entity.ApartmentInfo"
                     autoMapping="true">
            <id property="id" column="apart_id"/>
        </association>
        <collection property="labelInfoList" ofType="com.atguigu.lease.model.entity.LabelInfo"
                    select="getLabelInfoByRoomId" column="id"/>
        <collection property="graphVoList" ofType="com.atguigu.lease.web.app.vo.graph.GraphVo"
                    select="getGraphByRoomId" column="id"/>
    </resultMap>

    <select id="pageRoomItem" resultMap="RoomItemMap">
        select ri.id,
        ri.room_number,
        ri.rent,
        ai.id apart_id,
        ai.name,
        ai.introduction,
        ai.district_id,
        ai.district_name,
        ai.city_id,
        ai.city_name,
        ai.province_id,
        ai.province_name,
        ai.address_detail,
        ai.latitude,
        ai.longitude,
        ai.phone,
        ai.is_release
        from room_info ri
        left join apartment_info ai on ri.apartment_id = ai.id and ai.is_deleted = 0
        <where>
            ri.is_deleted = 0
            and ri.is_release = 1
            and ri.id not in (
            select la.room_id
            from lease_agreement la
            where la.status in (2, 5)
            and la.is_deleted = 0
            )

            <if test="queryVo.provinceId !=null ">
                and ai.province_id =#{queryVo.provinceId}
            </if>

            <if test="queryVo.cityId !=null ">
                and ai.city_id =#{queryVo.cityId}
            </if>

            <if test="queryVo.districtId !=null ">
                and ai.district_id =#{queryVo.districtId}
            </if>

            <if test="queryVo.minRent != null and queryVo.maxRent != null">
                and (ri.rent &gt;= #{queryVo.minRent} and ri.rent &lt;= #{queryVo.maxRent})
            </if>

            <if test="queryVo.paymentTypeId !=null ">
                and ri.id in (select room_id from room_payment_type rpt where rpt.is_deleted=0 and
                rpt.payment_type_id=#{queryVo.paymentTypeId})
            </if>

        </where>

        <if test="queryVo.orderType == 'desc' or queryVo.orderType == 'asc'">
            order by ri.rent ${queryVo.orderType}
        </if>

    </select>


    <select id="getLabelInfoByRoomId" resultType="com.atguigu.lease.model.entity.LabelInfo">
        select id,
               type,
               name
        from label_info
        where is_deleted = 0
          and id in (
            select label_id
            from room_label rl
            where rl.is_deleted = 0
              and rl.room_id = #{id}
        )

    </select>

    <select id="getGraphByRoomId" resultType="com.atguigu.lease.web.app.vo.graph.GraphVo">
        select name, url
        from graph_info gi
        where gi.is_deleted = 0
          and gi.item_id = #{id}
          and gi.item_type = 2
    </select>


    <select id="selectMinRentByApartmentId" resultType="java.math.BigDecimal">
        select min(rent)
        from room_info
        where is_deleted = 0
          and apartment_id = #{apartmentId}
    </select>


    <select id="pageItemByApartmentId" resultMap="RoomItemMap">
        select ri.id,
               ri.room_number,
               ri.rent,
               ai.id apart_id,
               ai.name,
               ai.introduction,
               ai.district_id,
               ai.district_name,
               ai.city_id,
               ai.city_name,
               ai.province_id,
               ai.province_name,
               ai.address_detail,
               ai.latitude,
               ai.longitude,
               ai.phone,
               ai.is_release
        from room_info ri
                 left join apartment_info ai on ri.apartment_id = ai.id and ai.is_deleted = 0
        where ri.apartment_id = #{id}
          and ri.is_deleted = 0
          and ri.is_release = 1
          and ri.id not in (
            select la.room_id
            from lease_agreement la
            where la.status in (2, 5)
              and la.is_deleted = 0
        )
    </select>
</mapper>
